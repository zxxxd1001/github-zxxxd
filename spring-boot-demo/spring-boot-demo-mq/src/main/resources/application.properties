spring.rabbitmq.host=192.168.1.4
spring.rabbitmq.username=guest
spring.rabbitmq.password=guest
#spring.rabbitmq.virtual-host
spring.rabbitmq.connection-timeout=15000
#开启消费者确认 所有方法都要手动提交 消息确认
spring.rabbitmq.listener.simple.acknowledge-mode=manual
#消费者初始化监听大小
spring.rabbitmq.listener.simple.concurrency=5
#消费者最大监听大小
spring.rabbitmq.listener.simple.max-concurrency=10
#需要研究这个参数 还有一点需要注意的是消费者有一个参数prefetch，它表示的是一个Channel(也就是SimpleMessageListenerContainer的一个线程)预取的消息数量，这个参数只会在手动确认的消费者才生效
#spring.rabbitmq.listener.simple.prefetch=1
#开启发布确认机制
spring.rabbitmq.publisher-confirms=true
spring.rabbitmq.publisher-returns=true

#这个参数为true表示如果发送消息到了RabbitMq，没有对应该消息的队列。那么会将消息返回给生产者，此时仍然会发送ack确认消息。
spring.rabbitmq.template.mandatory=true


spring.rabbitmq.listener.order.queue.name=queue-2
spring.rabbitmq.listener.order.queue.durable=true
spring.rabbitmq.listener.order.exchange.name=exchange-2
spring.rabbitmq.listener.order.exchange.durable=true
spring.rabbitmq.listener.order.exchange.type=topic
spring.rabbitmq.listener.order.exchange.ignoreDeclarationExceptions=true
spring.rabbitmq.listener.order.key=springboot.*


#开启tomcat日志，异步记录不会占用资源,spring-configuration-metadata.json记录了tomcat的所有配置
#server.tomcat.accesslog.enabled=true
#server.tomcat.accesslog.directory=/home/
#server.tomcat.accesslog.pattern=%h %l %u %t "%r" %s %b %D
server.tomcat.min-spare-threads=10