<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:util="http://www.springframework.org/schema/util"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
    http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
    http://www.springframework.org/schema/context
    http://www.springframework.org/schema/context/spring-context-3.2.xsd
    http://www.springframework.org/schema/tx
    http://www.springframework.org/schema/tx/spring-tx-3.2.xsd
    http://www.springframework.org/schema/aop
    http://www.springframework.org/schema/aop/spring-aop-3.2.xsd
    http://www.springframework.org/schema/util
    http://www.springframework.org/schema/util/spring-util-3.2.xsd
    http://www.springframework.org/schema/mvc
    http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd">

    <bean id="druidDataSource" class="com.alibaba.druid.pool.DruidDataSource" init-method="init" destroy-method="close">
        <property name="username" value="root"/>
        <property name="password" value="111111"/>
        <property name="driverClassName" value="com.mysql.jdbc.Driver"/>
        <property name="url" value="jdbc:mysql://47.100.164.223:3306/mybatis?characterEncoding=utf8"/>
        <!-- 初始化连接大小 -->
        <property name="initialSize" value="1"/>
        <!-- 连接池最大使用连接数 -->
        <property name="maxActive" value="20"/>
        <!-- 获取连接最大等待时间 -->
        <property name="maxWait" value="60000"/>
        <!-- 连接池最小空闲 -->
        <property name="minIdle" value="3"/>
        <!-- 自动清除无用连接 -->
        <property name="removeAbandoned" value="true"/>
        <!-- 清除无用连接的等待时间 -->
        <property name="removeAbandonedTimeout" value="180"/>
        <!-- 连接属性 <property name="connectionProperties" value="clientEncoding=UTF-8">-->
        <property name="timeBetweenEvictionRunsMillis" value="60000"/>
        <property name="minEvictableIdleTimeMillis" value="300000"/>
        <property name="validationQuery" value="SELECT 'x'"/>
        <property name="testWhileIdle" value="true"/>
        <property name="testOnBorrow" value="false"/>
        <property name="testOnReturn" value="false"/>

        <!--监控数据库-->
        <property name="filters" value="mergeStat"></property>
        <!-- 数据库密码加密,以下两行配置必需 -->
        <!--<property name="filters" value="config" />-->
        <!--<property name="connectionProperties" value="config.decrypt=true" />-->
        <!--<property name="proxyFilters">-->
        <!--<list>-->
        <!--<ref bean="statFilter" />-->
        <!--<ref bean="logFilter" />-->
        <!--</list>-->
        <!--</property>-->
    </bean>
    <!-- 慢SQL记录 *start* -->
    <!--<bean id="statFilter" class="com.alibaba.druid.filter.stat.StatFilter">-->
    <!--&lt;!&ndash; 开启合并sql &ndash;&gt;-->
    <!--<property name="mergeSql" value="true" />-->
    <!--&lt;!&ndash; 开启慢查询语句,1秒 &ndash;&gt;-->
    <!--<property name="slowSqlMillis" value="500" />-->
    <!--<property name="logSlowSql" value="false" />-->
    <!--</bean>-->

    <!--<bean id="logFilter" class="com.alibaba.druid.filter.logging.Log4jFilter">-->
    <!-- <property name="resultSetLogEnabled" value="false" /> -->
    <!-- <property name="statementExecutableSqlLogEnable" value="true" /> -->
    <!--</bean>-->

    <bean id="dbcpDataSource" class="org.apache.commons.dbcp.BasicDataSource">
        <property name="username" value="root"/>
        <property name="password" value="manager"/>
        <property name="driverClassName" value="com.mysql.jdbc.Driver"/>
        <property name="url" value="jdbc:mysql://10.3.36.203:3306/mybatis?characterEncoding=utf8"/>

        <!--初始化连接数-->
        <property name="initialSize" value="10"/>
        <!--最大使用连接数-->
        <property name="maxActive" value="100"/>

        <!--最小空闲连接，连接池中最小的空闲的连接数，低于这个数量会被创建新的连接
            默认为0，该参数越接近maxIdle，性能越好，因为连接的创建和销毁，都是需要消耗资源的；
            但是不能太大，因为在机器很空闲的时候，也会创建低于minidle个数的连接，类似于jvm参数中的Xmn设置
        -->
        <property name="minIdle" value="50"/>
        <!--从池中取连接的最大等待时间，单位ms.当没有可用连接时，连接池等待连接释放的最大时间-->
        <property name="maxWait" value="60000"/>
        <!--借出连接时不要测试，否则很影响性能。一定要配置，因为它的默认值是true。
        false表示每次从连接池中取出连接时，不需要执行validationQuery = "SELECT 1" 中的SQL进行测试。
        若配置为true,对性能有非常大的影响，性能会下降7-10倍。-->
        <property name="testOnBorrow" value="false"/>
        <!--指明连接是否被空闲连接回收器(如果有)进行检验.如果检测失败,则连接将被从池中去除.-->
        <property name="testWhileIdle" value="true"/>
        <!--验证使用的SQL语句-->
        <property name="validationQuery" value="SELECT 1"/>

        <!--每30秒运行一次空闲连接回收器（独立线程）。
        并每次检查3个连接，如果连接空闲时间超过30分钟就销毁。
        销毁连接后，连接数量就少了，如果小于minIdle数量，就新建连接，维护数量不少于minIdle，过行了新老更替。-->
        <property name="timeBetweenEvictionRunsMillis" value="30000"/>
        <!--池中的连接空闲30分钟后被回收-->
        <property name="minEvictableIdleTimeMillis" value="1800000"/>
        <!--在每次空闲连接回收器线程(如果有),运行时检查的连接数量-->
        <property name="numTestsPerEvictionRun" value="3"/>
        <!--连接泄漏回收参数，当可用连接数少于3个时才执行-->
        <property name="removeAbandoned" value="true"/>
        <!--连接泄漏回收参数，180秒，泄露的连接可以被删除的超时值-->
        <property name="removeAbandonedTimeout" value="180"/>
    </bean>
    <!--mybatis文件配置，扫描所有的mapper-->
    <bean id="sqlSessionFactoryBean" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="druidDataSource"/>
        <!--<property name="configLocation" value="mybatis/SqlMapConfig.xml"/>-->
        <property name="mapperLocations" value="classpath*:mybatis/mapper/*.xml"/>
    </bean>
    <!--spring整合mybatis配置，扫描所有Dao-->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="basePackage" value="com.git.zxxxd.dao"/>
        <!--自动注入SqlSessionFactoryBean-->
        <!--<property name="sqlSessionFactory" ref="sqlSessionFactoryBean"/>-->
    </bean>

    <!--开启注解扫描，Controller、Service-->
    <context:component-scan base-package="com.git.zxxxd"/>
    <!--开启mvc注解扫描，RequestMapping-->
    <mvc:annotation-driven conversion-service="conversionService"/>

    <!--自定义参数绑定-->
    <bean id="conversionService" class="org.springframework.format.support.FormattingConversionServiceFactoryBean">
        <property name="formatters">
            <list>
                <bean class="com.git.zxxxd.formatter.DateParameter"/>
            </list>
        </property>
        <property name="converters">
            <list>
                <bean class="com.git.zxxxd.converter.DateTimeParameter"/>
            </list>
        </property>
    </bean>

    <!--拦截器配置-->
    <mvc:interceptors>
        <mvc:interceptor>
            <mvc:mapping path="/**"/>
            <bean class="com.git.zxxxd.interceptor.LogCostInterceptor"/>
        </mvc:interceptor>
    </mvc:interceptors>


    <!--配置事物管理组件-->
    <bean id="txManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="druidDataSource"/>
    </bean>

    <!--&lt;!&ndash; 开启事务注解标记@Transactional &ndash;&gt;-->
    <tx:annotation-driven  transaction-manager="txManager"/>

    <!-- 当调用带@Transactional标记的方法时,将txManager事务管理功能切入进去 -->
    <!--配置事物传播性-->
    <!--<tx:advice id="txAdvice" transaction-manager="txManager">-->
        <!--<tx:attributes>-->
            <!--<tx:method name="select*" propagation="REQUIRED" read-only="true" />-->
            <!--<tx:method name="get*" propagation="REQUIRED" read-only="true" />-->
            <!--<tx:method name="query*" propagation="REQUIRED" read-only="true" />-->
            <!--<tx:method name="find*" propagation="REQUIRED" read-only="true" />-->
            <!--<tx:method name="delete*" propagation="REQUIRED" />-->
            <!--<tx:method name="update*" propagation="REQUIRED" />-->
            <!--<tx:method name="insert*" propagation="NOT_SUPPORTED"/>-->
        <!--</tx:attributes>-->
    <!--</tx:advice>-->
    <!--<aop:config>-->
        <!--<aop:pointcut id="target" expression="within(com.git.zxxxd.service.*)"/>-->
        <!--<aop:advisor advice-ref="txAdvice" pointcut-ref="target"/>-->
    <!--</aop:config>-->

    <!--<bean id="namedParameterJdbcTemplate" class="org.springframework.jdbc.core.namedparam.NamedParameterJdbcTemplate">-->
        <!--<constructor-arg ref="druidDataSource" />-->
    <!--</bean>-->


    <!--注解映射器-->
    <!--<bean class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping"/>-->
    <!--注解适配器-->
    <!--<bean class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter"/>-->

</beans>
